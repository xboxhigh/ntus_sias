<?php

namespace app\modules\v1\controllers;

use Yii;

class UsersController extends \yii\rest\ActiveController
{
    public $modelClass = 'app\modules\v1\models\Users';
    public $usersBodyClass = 'app\modules\v1\models\UsersBodyInfo';

    public function behaviors()
    {
        $behaviors = parent::behaviors();
        $behaviors['authenticator'] = [
            'class' => \sizeg\jwt\JwtHttpBearerAuth::class,
            'optional' => [ // the action list in here does not need JWT authentication
                'signin',
            ],
        ];

        return $behaviors;
    }

    public function actions()
    {
        $action = parent::actions(); // TODO: Change the autogenerated stub
        unset($action['index']);
        unset($action['create']);
        unset($action['update']);
        unset($action['delete']);
    }

    public function actionSignin()
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;

        $params = $request->post();

        // 新增使用者資料（table users)
        $newUser = $this->modelClass::createData($params);
        if (is_null($newUser)) {
            // 資料格式錯誤，新增失敗
            $response->statusCode = 400;
            $response->data = [
                'messsage' => "資料格式錯誤，新增失敗"
            ];
        } else {
            // 新增成功
            $response->statusCode = 201;
            $response->data = [
                'name' => $newUser['name'],
                'token' => $newUser['access_token'],
                'last_modify' => $newUser['last_modify'],
            ];
        }
        return $response;
    }

    public function actionIndex()
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = "";
        } else {
            $role = $user['role'];

            if ($role === 1) {
                // Get all user records
                $users = $this->modelClass::findAllRecords();
                // Get the user's body infomation
                $usersBodyInfo = $this->usersBodyClass::findAllRecordsJoinWithParams($users);

                if (is_null($usersBodyInfo)) {
                    $response->statusCode = 404;
                    $response->data = [
                        'message' => '無紀錄',
                    ];
                } else {
                    $response->statusCode = 200;
                    $response->data = $usersBodyInfo;
                }
            } else {
                $response->statusCode = 403;
                $response->data = "";
            }
        }
        return $response;
    }

    public function actionFindOne($id)
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);
        $u_id = $user['u_id'];

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = "";
        } else {
            $usersBodyInfo = $this->usersBodyClass::findOneRecordsJoinWithParams($id, $user);

            if (is_null($usersBodyInfo)) {
                $response->statusCode = 404;
                $response->data = [
                    'message' => '無此ID',
                ];
            } else {
                if ($u_id != $usersBodyInfo['u_id']) {
                    $response->statusCode = 403;
                    $response->data = [
                        'message' => '無權限',
                    ];
                } else {
                    $response->statusCode = 200;
                    $response->data = $usersBodyInfo;
                }
            }
        }
        return $response;
    }

    public function actionCreate()
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';
        $params = $request->post();

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = [
                "message" => "禁止存取，請先至首頁建立基本資料．",
            ];
        } else {
            // 新增使用者身體資料（table users_body_info)
            $usersBodyInfo = $this->usersBodyClass::createData($user['u_id'], $params);

            if (is_null($usersBodyInfo)) {
                $response->statusCode = 400;
                $response->data = [
                    'message' => '資料格式有誤，新增失敗(users_body_info)．',
                ];
            } else {
                $this->modelClass::updateData($user['u_id'], ["last_modify" => $usersBodyInfo['ubi_id']]);

                $response->statusCode = 201;
                $response->data = [
                    'message' => '新增成功．',
                    'ubi_id' => $usersBodyInfo['ubi_id']
                ];
            }
        }
        return $response;
    }

    public function actionUpdate($id)
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';
        $params = $request->post();

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = [
                "message" => "禁止存取，請先至首頁建立基本資料．",
            ];
        } else {
            // 修改使用者資料 - 2 （table users_body_info)
            $usersBodyInfo = $this->usersBodyClass::updateData($id, $params);

            if (is_null($usersBodyInfo)) {
                $response->statusCode = 400;
                $response->data = [
                    'message' => '資料修改失敗，資料格式有誤．',
                ];
            } else {
                $response->statusCode = 200;
                $response->data = [
                    'message' => '修改成功．',
                ];
            }
        }
        return $response;
    }

    public function actionDeleteForms($id)
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = "";
        } else {
            $role = $user['role'];

            if ($role === 1) {
                // Staff role
                $this->usersBodyClass::deleteData($id);
                $response->statusCode = 200;
                $response->data = [
                    'message' => '刪除成功',
                ];
            } else {
                // Common user role
                $identity = $this->modelClass::findIdentity($id);

                if ($identity['u_id'] != $user['u_id']) {
                    $response->statusCode = 403;
                    $response->data = [
                        'message' => '無權限',
                    ];
                } else {
                    $this->usersBodyClass::deleteData($id);
                    $response->statusCode = 200;
                    $response->data = [
                        'message' => '刪除成功',
                    ];
                }
            }
        }
        return $response;
    }

    public function actionDelete($id)
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = "";
        } else {
            $role = $user['role'];

            if ($role === 1) {
                // Staff role
                $this->modelClass::deleteData($id);
                $response->statusCode = 200;
                $response->data = [
                    'message' => '刪除成功',
                ];
            } else {
                // Common user role
                $identity = $this->modelClass::findIdentity($id);

                if ($identity['u_id'] != $user['u_id']) {
                    $response->statusCode = 403;
                    $response->data = [
                        'message' => '無權限',
                    ];
                } else {
                    $this->modelClass::deleteData($id);
                    $response->statusCode = 200;
                    $response->data = [
                        'message' => '刪除成功',
                    ];
                }
            }
        }
        return $response;
    }

    public function actionGetAllData($id)
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = "";
        } else {
            $role = $user['role'];

            if ($role === 1) {
                $data = $this->modelClass::findAllRecordsById($id);
                if (is_null($data)) {
                    $response->statusCode = 204;
                    $response->data = [
                        'message' => '無紀錄',
                    ];
                } else {
                    $response->statusCode = 200;
                    $response->data = $data;
                }
            } else {
                $response->statusCode = 403;
                $response->data = "";
            }
        }
        return $response;
    }

    public function actionFindList()
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = "";
        } else {
            $role = $user['role'];

            if ($role === 1) {
                $users = $this->modelClass::findListIDs();

                if (is_null($users)) {
                    $response->statusCode = 404;
                    $response->data = [
                        'message' => '無紀錄',
                    ];
                } else {
                    $response->statusCode = 200;
                    $response->data = $users;
                }
            } else {
                $response->statusCode = 403;
                $response->data = "";
            }
        }
        return $response;
    }

    public function actionFindListByToken()
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        $idList = $this->modelClass::findListIDsByToken($token);

        if (is_null($idList)) {
            $response->statusCode = 204;
            $response->data = [
                'message' => '無紀錄',
            ];
        } else {
            $response->statusCode = 200;
            $response->data = $idList;
        }
        return $response;
    }
}

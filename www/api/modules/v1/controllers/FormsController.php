<?php

namespace app\modules\v1\controllers;

use Yii;

class FormsController extends \yii\rest\ActiveController
{
    public $modelClass = 'app\modules\v1\models\Users';
    public $brandClass = 'app\modules\v1\models\ShoesBrand';
    public $bottomDesignClass = 'app\modules\v1\models\ShoesDesign';
    public $injuredCodesBegClass = 'app\modules\v1\models\MedicalInjuredCodesBeg';
    public $injuredCodesMidClass = 'app\modules\v1\models\MedicalInjuredCodesMid';
    public $injuredCodesEndClass = 'app\modules\v1\models\MedicalInjuredCodesEnd';
    public $diagCodesClass = 'app\modules\v1\models\MedicalDiagnosisCodes';

    public function behaviors()
    {
        $behaviors = parent::behaviors();
        $behaviors['authenticator'] = [
            'class' => \sizeg\jwt\JwtHttpBearerAuth::class,
            'optional' => [ // the action list in here does not need JWT authentication
            ],
        ];

        return $behaviors;
    }

    public function actions()
    {
        $action = parent::actions(); // TODO: Change the autogenerated stub
        unset($action['index']);
        unset($action['create']);
        unset($action['update']);
        unset($action['delete']);
    }

    public function actionBrand()
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = "";
        } else {
            $brands = $this->brandClass::findAllRecords();

            if (is_null($brands)) {
                $response->statusCode = 404;
                $response->data = [
                    'message' => '無紀錄',
                ];
            } else {
                $response->statusCode = 200;
                $response->data = $brands;
            }
        }
        return $response;
    }

    public function actionBrandCreate()
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';
        $params = $request->post();

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = [
                "message" => "禁止存取，請先至首頁建立基本資料．",
            ];
        } else {
            $role = $user['role'];

            if ($role === 1) {
                // 新增鞋子品牌名稱（table shoes_brand)
                $brands = $this->brandClass::createData($params);

                if (is_null($brands)) {

                    $response->statusCode = 400;
                    $response->data = [
                        'message' => '資料格式有誤，新增失敗(shoes_brand)．',
                    ];
                } else {
                    $response->statusCode = 201;
                    $response->data = $brands;

                }
            } else {
                $response->statusCode = 403;
                $response->data = [
                    'message' => '無權限',
                ];
            }
        }

        return $response;
    }

    public function actionBrandUpdate($id)
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';
        $params = $request->post();

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = [
                "message" => "禁止存取，請先至首頁建立基本資料．",
            ];
        } else {
            $role = $user['role'];

            if ($role === 1) {
                $brand = $this->brandClass::updateData($id, $params);
                if (is_null($brand)) {
                    $response->statusCode = 400;
                    $response->data = [
                        'message' => '資料修改失敗，資料格式有誤．',
                    ];
                } else {
                    $response->statusCode = 200;
                    $response->data = $brand;
                }
            } else {
                $response->statusCode = 403;
                $response->data = [
                    'message' => '無權限',
                ];
            }

        }
        return $response;
    }

    public function actionBrandDelete($id)
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';
        $params = $request->post();

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = "";
        } else {
            $role = $user['role'];
            $identity = $this->brandClass::findOneRecord($id);

            if (is_null($identity)) {
                $response->statusCode = 404;
                $response->data = [
                    "message" => "無資料可刪",
                ];
            } else {
                if ($role === 1) {
                    // Staff role
                    $this->brandClass::deleteData($id);
                    $response->statusCode = 200;
                    $response->data = "";
                } else {
                    $response->statusCode = 403;
                    $response->data = [
                        'message' => '無權限',
                    ];
                }
            }
        }
        return $response;
    }


    public function actionBottomDesign()
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = "";
        } else {
            $shoesDesign = $this->bottomDesignClass::findAllRecords();

            if (is_null($shoesDesign)) {
                $response->statusCode = 404;
                $response->data = [
                    'message' => '無紀錄',
                ];
            } else {
                $response->statusCode = 200;
                $response->data = $shoesDesign;
            }
        }
        return $response;
    }

    public function actionBottomDesignCreate()
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';
        $params = $request->post();

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = [
                "message" => "禁止存取，請先至首頁建立基本資料．",
            ];
        } else {
            $role = $user['role'];

            if ($role === 1) {
                // 新增鞋子品牌名稱（table shoes_design)
                $shoesDesign = $this->bottomDesignClass::createData($params);

                if (is_null($shoesDesign)) {

                    $response->statusCode = 400;
                    $response->data = [
                        'message' => '資料格式有誤，新增失敗(shoes_design)．',
                    ];
                } else {
                    $response->statusCode = 201;
                    $response->data = $shoesDesign;

                }
            } else {
                $response->statusCode = 403;
                $response->data = [
                    'message' => '無權限',
                ];
            }
        }

        return $response;
    }

    public function actionBottomDesignUpdate($id)
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';
        $params = $request->post();

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = [
                "message" => "禁止存取，請先至首頁建立基本資料．",
            ];
        } else {
            $role = $user['role'];

            if ($role === 1) {
                $shoesDesign = $this->bottomDesignClass::updateData($id, $params);
                if (is_null($shoesDesign)) {
                    $response->statusCode = 400;
                    $response->data = [
                        'message' => '資料修改失敗，資料格式有誤．',
                    ];
                } else {
                    $response->statusCode = 200;
                    $response->data = $shoesDesign;
                }
            } else {
                $response->statusCode = 403;
                $response->data = [
                    'message' => '無權限',
                ];
            }

        }
        return $response;
    }

    public function actionBottomDesignDelete($id)
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';
        $params = $request->post();

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = "";
        } else {
            $role = $user['role'];
            $identity = $this->bottomDesignClass::findOneRecord($id);

            if (is_null($identity)) {
                $response->statusCode = 404;
                $response->data = [
                    "message" => "無資料可刪",
                ];
            } else {
                if ($role === 1) {
                    // Staff role
                    $this->bottomDesignClass::deleteData($id);
                    $response->statusCode = 200;
                    $response->data = "";
                } else {
                    $response->statusCode = 403;
                    $response->data = [
                        'message' => '無權限',
                    ];
                }
            }
        }
        return $response;
    }



    public function actionInjuredCodesBeg()
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = "";
        } else {
            $injuredCodesBeg = $this->injuredCodesBegClass::findAllRecords();

            if (is_null($injuredCodesBeg)) {
                $response->statusCode = 404;
                $response->data = [
                    'message' => '無紀錄',
                ];
            } else {
                $response->statusCode = 200;
                $response->data = $injuredCodesBeg;
            }
        }
        return $response;
    }

    public function actionInjuredCodesBegCreate()
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';
        $params = $request->post();

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = [
                "message" => "禁止存取，請先至首頁建立基本資料．",
            ];
        } else {
            $role = $user['role'];

            if ($role === 1) {
                // 新增鞋子品牌名稱（table shoes_brand)
                $injuredCodesBeg = $this->injuredCodesBegClass::createData($params);

                if (is_null($injuredCodesBeg)) {

                    $response->statusCode = 400;
                    $response->data = [
                        'message' => '資料格式有誤，新增失敗(medical_injured_code_beg)．',
                    ];
                } else {
                    $response->statusCode = 201;
                    $response->data = $injuredCodesBeg;

                }
            } else {
                $response->statusCode = 403;
                $response->data = [
                    'message' => '無權限',
                ];
            }
        }

        return $response;
    }

    public function actionInjuredCodesBegUpdate($id)
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';
        $params = $request->post();

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = [
                "message" => "禁止存取，請先至首頁建立基本資料．",
            ];
        } else {
            $role = $user['role'];

            if ($role === 1) {
                $injuredCodesBeg = $this->injuredCodesBegClass::updateData($id, $params);
                if (is_null($injuredCodesBeg)) {
                    $response->statusCode = 400;
                    $response->data = [
                        'message' => '資料修改失敗，資料格式有誤．',
                    ];
                } else {
                    $response->statusCode = 200;
                    $response->data = $injuredCodesBeg;
                }
            } else {
                $response->statusCode = 403;
                $response->data = [
                    'message' => '無權限',
                ];
            }

        }
        return $response;
    }

    public function actionInjuredCodesBegDelete($id)
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';
        $params = $request->post();

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = "";
        } else {
            $role = $user['role'];
            $identity = $this->injuredCodesBegClass::findOneRecord($id);

            if (is_null($identity)) {
                $response->statusCode = 404;
                $response->data = [
                    "message" => "無資料可刪",
                ];
            } else {
                if ($role === 1) {
                    // Staff role
                    $this->injuredCodesBegClass::deleteData($id);
                    $response->statusCode = 200;
                    $response->data = "";
                } else {
                    $response->statusCode = 403;
                    $response->data = [
                        'message' => '無權限',
                    ];
                }
            }
        }
        return $response;
    }


    public function actionInjuredCodesMid()
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = "";
        } else {
            $injuredCodesMid = $this->injuredCodesMidClass::findAllRecords();

            if (is_null($injuredCodesMid)) {
                $response->statusCode = 404;
                $response->data = [
                    'message' => '無紀錄',
                ];
            } else {
                $response->statusCode = 200;
                $response->data = $injuredCodesMid;
            }
        }
        return $response;
    }

    public function actionInjuredCodesMidCreate()
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';
        $params = $request->post();

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = [
                "message" => "禁止存取，請先至首頁建立基本資料．",
            ];
        } else {
            $role = $user['role'];

            if ($role === 1) {
                // 新增鞋子品牌名稱（table shoes_brand)
                $injuredCodesMid = $this->injuredCodesMidClass::createData($params);

                if (is_null($injuredCodesMid)) {

                    $response->statusCode = 400;
                    $response->data = [
                        'message' => '資料格式有誤，新增失敗(medical_injured_code_mid)．',
                    ];
                } else {
                    $response->statusCode = 201;
                    $response->data = $injuredCodesMid;

                }
            } else {
                $response->statusCode = 403;
                $response->data = [
                    'message' => '無權限',
                ];
            }
        }

        return $response;
    }

    public function actionInjuredCodesMidUpdate($id)
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';
        $params = $request->post();

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = [
                "message" => "禁止存取，請先至首頁建立基本資料．",
            ];
        } else {
            $role = $user['role'];

            if ($role === 1) {
                $injuredCodesMid = $this->injuredCodesMidClass::updateData($id, $params);
                if (is_null($injuredCodesMid)) {
                    $response->statusCode = 400;
                    $response->data = [
                        'message' => '資料修改失敗，資料格式有誤．',
                    ];
                } else {
                    $response->statusCode = 200;
                    $response->data = $injuredCodesMid;
                }
            } else {
                $response->statusCode = 403;
                $response->data = [
                    'message' => '無權限',
                ];
            }

        }
        return $response;
    }

    public function actionInjuredCodesMidDelete($id)
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';
        $params = $request->post();

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = "";
        } else {
            $role = $user['role'];
            $identity = $this->injuredCodesMidClass::findOneRecord($id);

            if (is_null($identity)) {
                $response->statusCode = 404;
                $response->data = [
                    "message" => "無資料可刪",
                ];
            } else {
                if ($role === 1) {
                    // Staff role
                    $this->injuredCodesMidClass::deleteData($id);
                    $response->statusCode = 200;
                    $response->data = "";
                } else {
                    $response->statusCode = 403;
                    $response->data = [
                        'message' => '無權限',
                    ];
                }
            }
        }
        return $response;
    }

    public function actionInjuredCodesEnd()
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = "";
        } else {
            $injuredCodesEnd = $this->injuredCodesEndClass::findAllRecords();

            if (is_null($injuredCodesEnd)) {
                $response->statusCode = 404;
                $response->data = [
                    'message' => '無紀錄',
                ];
            } else {
                $response->statusCode = 200;
                $response->data = $injuredCodesEnd;
            }
        }
        return $response;
    }

    public function actionInjuredCodesEndCreate()
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';
        $params = $request->post();

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = [
                "message" => "禁止存取，請先至首頁建立基本資料．",
            ];
        } else {
            $role = $user['role'];

            if ($role === 1) {
                // 新增鞋子品牌名稱（table shoes_brand)
                $injuredCodesEnd = $this->injuredCodesEndClass::createData($params);

                if (is_null($injuredCodesEnd)) {

                    $response->statusCode = 400;
                    $response->data = [
                        'message' => '資料格式有誤，新增失敗(medical_injured_code_end)．',
                    ];
                } else {
                    $response->statusCode = 201;
                    $response->data = $injuredCodesEnd;

                }
            } else {
                $response->statusCode = 403;
                $response->data = [
                    'message' => '無權限',
                ];
            }
        }

        return $response;
    }

    public function actionInjuredCodesEndUpdate($id)
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';
        $params = $request->post();

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = [
                "message" => "禁止存取，請先至首頁建立基本資料．",
            ];
        } else {
            $role = $user['role'];

            if ($role === 1) {
                $injuredCodesEnd = $this->injuredCodesEndClass::updateData($id, $params);
                if (is_null($injuredCodesEnd)) {
                    $response->statusCode = 400;
                    $response->data = [
                        'message' => '資料修改失敗，資料格式有誤．',
                    ];
                } else {
                    $response->statusCode = 200;
                    $response->data = $injuredCodesEnd;
                }
            } else {
                $response->statusCode = 403;
                $response->data = [
                    'message' => '無權限',
                ];
            }

        }
        return $response;
    }

    public function actionInjuredCodesEndDelete($id)
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';
        $params = $request->post();

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = "";
        } else {
            $role = $user['role'];
            $identity = $this->injuredCodesEndClass::findOneRecord($id);

            if (is_null($identity)) {
                $response->statusCode = 404;
                $response->data = [
                    "message" => "無資料可刪",
                ];
            } else {
                if ($role === 1) {
                    // Staff role
                    $this->injuredCodesEndClass::deleteData($id);
                    $response->statusCode = 200;
                    $response->data = "";
                } else {
                    $response->statusCode = 403;
                    $response->data = [
                        'message' => '無權限',
                    ];
                }
            }
        }
        return $response;
    }



    public function actionDiagCodes()
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = "";
        } else {
            $diagCodes = $this->diagCodesClass::findAllRecords();

            if (is_null($diagCodes)) {
                $response->statusCode = 404;
                $response->data = [
                    'message' => '無紀錄',
                ];
            } else {
                $response->statusCode = 200;
                $response->data = $diagCodes;
            }
        }
        return $response;
    }

    public function actionDiagCodesCreate()
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';
        $params = $request->post();

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = [
                "message" => "禁止存取，請先至首頁建立基本資料．",
            ];
        } else {
            $role = $user['role'];

            if ($role === 1) {
                // 新增鞋子品牌名稱（table shoes_brand)
                $diagCodes = $this->diagCodesClass::createData($params);

                if (is_null($diagCodes)) {

                    $response->statusCode = 400;
                    $response->data = [
                        'message' => '資料格式有誤，新增失敗(medical_diagnosis_codes)．',
                    ];
                } else {
                    $response->statusCode = 201;
                    $response->data = $diagCodes;

                }
            } else {
                $response->statusCode = 403;
                $response->data = [
                    'message' => '無權限',
                ];
            }
        }

        return $response;
    }

    public function actionDiagCodesUpdate($id)
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';
        $params = $request->post();

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = [
                "message" => "禁止存取，請先至首頁建立基本資料．",
            ];
        } else {
            $role = $user['role'];

            if ($role === 1) {
                $diagCodes = $this->diagCodesClass::updateData($id, $params);
                if (is_null($diagCodes)) {
                    $response->statusCode = 400;
                    $response->data = [
                        'message' => '資料修改失敗，資料格式有誤．',
                    ];
                } else {
                    $response->statusCode = 200;
                    $response->data = $diagCodes;
                }
            } else {
                $response->statusCode = 403;
                $response->data = [
                    'message' => '無權限',
                ];
            }

        }
        return $response;
    }

    public function actionDiagCodesDelete($id)
    {
        $request = Yii::$app->request;
        $response = Yii::$app->response;
        $schema = 'Bearer';
        $params = $request->post();

        $authHeader = $request->getHeaders()->get('Authorization');
        if ($authHeader !== null && preg_match('/^' . $schema . '\s+(.*?)$/', $authHeader, $matches)) {
            $token = $matches[1];
        } else {
            $token = null;
        }

        // Find user base on access token
        $user = $this->modelClass::findIdentityByAccessToken($token);

        if (is_null($user)) {
            $response->statusCode = 403;
            $response->data = "";
        } else {
            $role = $user['role'];
            $identity = $this->diagCodesClass::findOneRecord($id);

            if (is_null($identity)) {
                $response->statusCode = 404;
                $response->data = [
                    "message" => "無資料可刪",
                ];
            } else {
                if ($role === 1) {
                    // Staff role
                    $this->diagCodesClass::deleteData($id);
                    $response->statusCode = 200;
                    $response->data = "";
                } else {
                    $response->statusCode = 403;
                    $response->data = [
                        'message' => '無權限',
                    ];
                }
            }
        }
        return $response;
    }
}
